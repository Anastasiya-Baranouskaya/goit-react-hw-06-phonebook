{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/contacts/selectors.js","redux/contacts/actions.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Section","title","children","className","s","section","getContacts","state","contacts","getFilter","filter","addContact","createAction","deleteContact","filterContact","ContactListItem","name","number","id","dispatch","useDispatch","listItem","span","button","type","onClick","onDelete","ContactList","useSelector","filteredContacts","useMemo","normalizedFilter","toLowerCase","contact","includes","list","map","ContactForm","useState","setName","setNumber","handleChange","e","target","value","formSubmitHandler","item","normalizedName","find","el","alert","nameId","uuidv4","telId","onSubmit","preventDefault","form","htmlFor","label","input","pattern","required","onChange","Component","changeFilter","useCallback","div","App","productContacts","createReducer","payload","productFilter","_","contactReducer","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistore","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.2ae06b2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Filter_div__2DsTs\",\"label\":\"Filter_label__2jCH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1FgvG\"};","import s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","export const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('product/add');\r\nexport const deleteContact = createAction('product/delete');\r\nexport const filterContact = createAction('filter/value');\r\n\r\n// export const addContacts = contacts => ({\r\n//   type: 'contacts/add',\r\n//   payload: contacts,\r\n// });\r\n\r\n// export const deleteContacts = id => ({\r\n//   type: 'contacts/delete',\r\n//   payload: { id },\r\n// });\r\n\r\n// export const filterValue = value => ({\r\n//   type: 'filter/value',\r\n//   payload: value,\r\n// });\r\n","// import { connect } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/actions';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactListItem({ name, number, id }) {\r\n  const dispatch = useDispatch();\r\n  const onDelete = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <li className={s.listItem}>\r\n      <span className={s.span}>{name}:</span>\r\n      <span className={s.span}>{number}:</span>\r\n      <button\r\n        className={s.button}\r\n        type=\"button\"\r\n        id={id}\r\n        onClick={() => {\r\n          onDelete({ id });\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\n// export default function ContactListItem({ name, number, id, onDeleteContact }) {\r\n//   return (\r\n//     <li className={s.listItem}>\r\n//       <span className={s.span}>{name}:</span>\r\n//       <span className={s.span}>{number}:</span>\r\n//       <button\r\n//         className={s.button}\r\n//         type=\"button\"\r\n//         id={id}\r\n//         onClick={() => onDeleteContact(id)}\r\n//       >\r\n//         Delete\r\n//       </button>\r\n//     </li>\r\n//   );\r\n// }\r\n// const mapDispatchToProps = { deleteContact };\r\n\r\n// export default connect(null, mapDispatchToProps)(ContactList);\r\n","// import {connect} from 'react-redux'\r\nimport { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\r\n\r\nimport ContactListItem from './ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n\r\n  const filteredContacts = useMemo(() => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  }, [filter, contacts]);\r\n\r\n  // function ContactList({ contacts, filter }) {\r\n  //   const filteredContacts = useMemo(() => {\r\n  //     const normalizedFilter = filter.toLowerCase();\r\n  //     return contacts.filter(contact =>\r\n  //       contact.name.toLowerCase().includes(normalizedFilter),\r\n  //     );\r\n  //   }, [filter, contacts]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          // onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     contacts: state.contacts,\r\n//     filter: state.filter,\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps)(ContactList);\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import PropTypes from 'prop-types'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/contacts/actions';\r\nimport { getContacts } from '../../redux/contacts/selectors';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    formSubmitHandler({ name, number, id: uuidv4() });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const formSubmitHandler = item => {\r\n    const normalizedName = item.name.toLowerCase();\r\n    contacts.find(el => {\r\n      return el.name.toLowerCase() === normalizedName;\r\n    })\r\n      ? alert(`${item.name} is alredy in contacts`)\r\n      : dispatch(addContact(item));\r\n  };\r\n\r\n  const nameId = uuidv4();\r\n  const telId = uuidv4();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label htmlFor={nameId} className={s.label}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleChange}\r\n        id={nameId}\r\n      />\r\n      <br />\r\n      <label htmlFor={telId} className={s.label}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        id={telId}\r\n        onChange={handleChange}\r\n      />\r\n      <br />\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   state: PropTypes.objectOf(PropTypes.string),\r\n// };\r\n\r\n// import {connect} from 'react-redux'\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     contactsList: state.contacts,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onAdd: () => dispatch(addContact),\r\n//   };\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","// import { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { filter } from '../../redux/contacts/reducers';\r\nimport { filterContact } from '../../redux/contacts/actions';\r\nimport { getFilter } from '../../redux/contacts/selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Component() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const changeFilter = useCallback(\r\n    e => {\r\n      dispatch(filterContact(e.target.value));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // const changeFilter = useCallback(\r\n  //   e => {\r\n  //     const filteredContacts = value => dispatch(filterContact(value));\r\n  //     filteredContacts(e.target.value);\r\n  //   },\r\n  //   [dispatch],\r\n  // );\r\n\r\n  return (\r\n    <div className={s.div}>\r\n      <label htmlFor={uuidv4()} className={s.label}>\r\n        Find contacts by name:\r\n      </label>\r\n      <input type=\"text\" value={filter} id={uuidv4()} onChange={changeFilter} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// function Filter({ filter, filterContact }) {\r\n//   const changeFilter = useCallback(\r\n//     e => {\r\n//       filterContact(e.target.value);\r\n//     },\r\n//     [filterContact],\r\n//   );\r\n\r\n//   return (\r\n//     <div>\r\n//       <label htmlFor={uuidv4()}>Find contacts by name</label>\r\n//       <input type=\"text\" value={filter} id={uuidv4()} onChange={changeFilter} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     filter: state.filter,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = { filterContact };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Component);\r\n","import './App.css';\n// import { useState, useCallback, useMemo } from 'react';\nimport Section from './components/Section/Section';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\n// import useLocalStorage from './hooks/useLocalStorage';\n\nexport default function App() {\n  // let arr = [\n  //   { id: 'id-1', name: 'Rosie Simpson', number: 4591256 },\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  // ];\n  // const [contacts, setContacts] = useLocalStorage('contacts', arr);\n  // const [filter, setFilter] = useState('');\n\n  // // useEffect(() => {\n  // //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // // }, [contacts]);\n\n  // const formSubmitHandler = item => {\n  //   const normalizedName = item.name.toLowerCase();\n  //   contacts.find(el => {\n  //     return el.name.toLowerCase() === normalizedName;\n  //   })\n  //     ? alert(`${item.name} is already in contacts`)\n  //     : changeContacts(item);\n  // };\n\n  // const changeContacts = item => {\n  //   setContacts([...contacts, item]);\n  // };\n\n  // const changeFilter = useCallback(e => {\n  //   setFilter(e.target.value);\n  // }, []);\n\n  // const filteredContacts = useMemo(() => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n  // }, [filter, contacts]);\n\n  // const deleteContact = useMemo(id => {\n  //   setContacts(contacts.filter(el => el.id !== id));\n  // }, [setContacts, contacts]);\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        <h1>Contacts</h1>\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContact } from './actions';\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: 4591256 },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\nconst initialFilter = '';\r\n\r\nconst productContacts = createReducer(initialContacts, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload.id),\r\n});\r\n\r\nconst productFilter = createReducer(initialFilter, {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\n// const productContacts = createReducer(initialContacts, {\r\n//   [addContact]: (state, { payload }) => [...state, payload],\r\n\r\n//   [deleteContact]: (state, { payload }) =>\r\n//     state.filter(contacts => contacts.id !== payload.id),\r\n// });\r\n// const productFilter = createReducer(initialFilter, {\r\n//   [filterContact]: (_, { payload }) => payload,\r\n// });\r\n\r\n// const productContacts = (state = initialContacts, action) => {\r\n//   switch (action.type) {\r\n//     case 'product/add':\r\n//       return [...state, action.payload];\r\n//     // break;\r\n//     case 'product/delete':\r\n//       return state.filter(contacts => contacts.id !== action.payload.id);\r\n//     // break;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const productFilter = (state = initialFilter, {payload}) => {\r\n//   return spayloadtate;\r\n// };\r\nexport const contactReducer = combineReducers({\r\n  contacts: productContacts,\r\n  filter: productFilter,\r\n});\r\n","// import { createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import { productReducer } from './contacts/reducers';\r\n\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { contactReducer } from './contacts/reducers';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst persistedReducer = persistReducer(persistConfig, contactReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistore = persistStore(store);\r\n\r\n// export const store = createStore(productReducer, composeWithDevTools());\r\n// export const store = configureStore({\r\n//   reducer: productReducer,\r\n// });\r\n","import App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistore } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={'Loading...'} persistor={persistore}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__vK-_5\",\"listItem\":\"ContactList_listItem__1S2Qk\",\"span\":\"ContactList_span__hWnfA\",\"button\":\"ContactList_button__1NSRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__6af4j\",\"label\":\"ContactForm_label__daVog\",\"input\":\"ContactForm_input__zGhef\",\"button\":\"ContactForm_button__AK_92\"};"],"sourceRoot":""}